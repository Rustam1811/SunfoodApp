/**
 * –°–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–æ–≤ —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π API —Å–µ—Ä–≤–µ—Ä
 */

export interface OrderItem {
  productId?: string;
  productName?: string;
  category?: string;
  name?: string;
  price: number;
  qty?: number;
  quantity?: number;
}

export interface Order {
  id: string;
  createdAt: Date;
  items: OrderItem[];
  totalPrice: number;
  status: string;
  userId?: string;
  bonusEarned?: number;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –∑–∞ –ø–µ—Ä–∏–æ–¥ —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π API
 */
export async function getOrders(from: Date, to: Date): Promise<Order[]> {
  console.log('üìä Analytics: getOrders –≤—ã–∑–≤–∞–Ω', { from, to });
  
  try {
    console.log('üìä Analytics: –∑–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–∫–∞–∑—ã —Å', from, '–ø–æ', to);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ –∫ Firebase Functions
    const apiUrl = 'https://us-central1-coffeeaddict-c9d70.cloudfunctions.net/orders?admin=true&v=' + Date.now();
    
    console.log('üìä Analytics: –∏—Å–ø–æ–ª—å–∑—É–µ–º URL:', apiUrl);
    console.log('üìä Analytics: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...');
    
    const startTime = Date.now();
    
    // –ü—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å—Ç–æ–π fetch –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    let response: Response;
    try {
      response = await fetch(apiUrl, {
        method: 'GET',
        mode: 'cors'
      });
    } catch (fetchError) {
      console.error('üìä Analytics: fetch failed, trying XMLHttpRequest:', fetchError);
      
      // Fallback –Ω–∞ XMLHttpRequest
      return new Promise((resolve, reject) => {
        const xhr = new XMLHttpRequest();
        xhr.open('GET', apiUrl, true);
        xhr.onreadystatechange = function() {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) {
              try {
                const data = JSON.parse(xhr.responseText);
                console.log('üìä Analytics: XMLHttpRequest —É—Å–ø–µ—à–µ–Ω, –ø–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤:', data.orders?.length || 0);
                
                if (!data.orders || !Array.isArray(data.orders)) {
                  console.warn('üìä Analytics: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:', data);
                  resolve([]);
                  return;
                }

                const allOrders = data.orders.map((order: any) => {
                  const createdAt = new Date(order.date || order.createdAt || order.timestamp || Date.now());
                  return {
                    id: order.id,
                    createdAt,
                    items: order.items || [],
                    totalPrice: order.amount || order.totalPrice || 0,
                    status: order.status || 'completed',
                    userId: order.userId,
                    bonusEarned: order.bonusEarned || 0
                  };
                });

                console.log('üìä Analytics: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–∫–∞–∑–æ–≤:', allOrders.length);
                resolve(allOrders);
              } catch (parseError) {
                console.error('üìä Analytics: –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', parseError);
                reject(new Error(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞: ${parseError}`));
              }
            } else {
              console.error('üìä Analytics: XMLHttpRequest error:', xhr.status, xhr.responseText);
              reject(new Error(`HTTP ${xhr.status}: ${xhr.responseText}`));
            }
          }
        };
        xhr.onerror = function() {
          console.error('üìä Analytics: XMLHttpRequest network error');
          reject(new Error('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞'));
        };
        xhr.send();
      });
    }
    
    const responseTime = Date.now() - startTime;
    
    console.log('üìä Analytics: –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∑–∞', responseTime, '–º—Å');
    console.log('üìä Analytics: –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ status:', response.status, 'url:', response.url);
    console.log('üìä Analytics: content-type:', response.headers.get('content-type'));
    
    if (!response.ok) {
      const errorText = await response.text();
      console.error('üìä Analytics: HTTP –æ—à–∏–±–∫–∞:', response.status, errorText);
      throw new Error(`HTTP ${response.status}: ${errorText}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –ø–æ–ª—É—á–∏–ª–∏ JSON, –∞ –Ω–µ HTML
    const contentType = response.headers.get('content-type');
    console.log('üìä Analytics: content-type:', contentType);
    
    if (!contentType || !contentType.includes('application/json')) {
      const responseText = await response.text();
      console.error('üìä Analytics: –ø–æ–ª—É—á–µ–Ω –Ω–µ JSON –æ—Ç–≤–µ—Ç:', responseText.substring(0, 200));
      throw new Error(`–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${contentType}. –û—Ç–≤–µ—Ç: ${responseText.substring(0, 100)}`);
    }
    
    const data = await response.json();
    console.log('üìä Analytics: –ø–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤:', data.orders?.length || 0);
    
    if (!data.orders || !Array.isArray(data.orders)) {
      console.warn('üìä Analytics: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:', data);
      return [];
    }

    // –í–†–ï–ú–ï–ù–ù–û: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –í–°–ï –∑–∞–∫–∞–∑—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    console.log('üìä Analytics: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –í–°–ï –∑–∞–∫–∞–∑—ã (–±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞—Ç)');
    
    const allOrders = data.orders.map((order: any) => {
      const createdAt = new Date(order.date || order.createdAt || order.timestamp || Date.now());
      
      // –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (data.orders.indexOf(order) < 3) {
        console.log('üìä Analytics: –∑–∞–∫–∞–∑', order.id, '–∏—Å—Ö–æ–¥–Ω–∞—è –¥–∞—Ç–∞:', order.date, '–ø–∞—Ä—Å–∏–Ω–≥:', createdAt, '—Ç–æ–≤–∞—Ä—ã:', order.items?.length);
      }
      
      return {
        id: order.id,
        createdAt,
        items: order.items || [],
        totalPrice: order.amount || order.totalPrice || 0,
        status: order.status || 'completed',
        userId: order.userId,
        bonusEarned: order.bonusEarned || 0
      };
    });

    console.log('üìä Analytics: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–∫–∞–∑–æ–≤:', allOrders.length);
    return allOrders;
    
  } catch (error) {
    console.error('üìä Analytics: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', error);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –Ω–µ —Å–∫—Ä—ã–≤–∞–µ–º –µ—ë —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–æ–≤: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function generateTestOrders(from: Date, to: Date): Order[] {
  const testOrders: Order[] = [];
  const currentDate = new Date(from);
  
  while (currentDate <= to) {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 2-5 –∑–∞–∫–∞–∑–æ–≤ –≤ –¥–µ–Ω—å
    const ordersPerDay = Math.floor(Math.random() * 4) + 2;
    
    for (let i = 0; i < ordersPerDay; i++) {
      const orderTime = new Date(currentDate);
      orderTime.setHours(Math.floor(Math.random() * 12) + 8); // 8-20 —á–∞—Å–æ–≤
      orderTime.setMinutes(Math.floor(Math.random() * 60));
      
      testOrders.push({
        id: `test-${Date.now()}-${i}`,
        createdAt: orderTime,
        items: [
          { name: '–ö–∞–ø—É—á–∏–Ω–æ', price: 350, quantity: 1 },
          { name: '–ö—Ä—É–∞—Å—Å–∞–Ω', price: 200, quantity: Math.floor(Math.random() * 2) + 1 }
        ],
        totalPrice: Math.floor(Math.random() * 800) + 300,
        status: 'completed',
        userId: `user-${Math.floor(Math.random() * 100)}`,
        bonusEarned: Math.floor(Math.random() * 50) + 10
      });
    }
    
    currentDate.setDate(currentDate.getDate() + 1);
  }
  
  console.log('üìä Analytics: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤:', testOrders.length);
  return testOrders;
}

export function aggregateOrders(orders: Order[]) {
  console.log('üìä Analytics: –∞–≥—Ä–µ–≥–∏—Ä—É–µ–º', orders.length, '–∑–∞–∫–∞–∑–æ–≤');
  
  // –°—É–º–º–∞—Ä–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
  const byProduct: Record<string, { productName: string; quantity: number; totalRevenue: number }> = {};
  const byHour: Record<string, number> = {};
  const byDay: Record<string, { orders: number; revenue: number; date: string }> = {};
  const byWeek: Record<string, { orders: number; revenue: number; weekStart: string }> = {};
  const byMonth: Record<string, { orders: number; revenue: number; monthStart: string }> = {};
  let totalRevenue = 0;
  let totalOrders = orders.length;

  for (const order of orders) {
    const hour = order.createdAt.getHours().toString();
    const day = order.createdAt.toISOString().slice(0, 10);
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª–æ –Ω–µ–¥–µ–ª–∏ (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫)
    const weekStart = getWeekStart(order.createdAt);
    const weekKey = weekStart.toISOString().slice(0, 10);
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª–æ –º–µ—Å—è—Ü–∞
    const monthStart = new Date(order.createdAt.getFullYear(), order.createdAt.getMonth(), 1);
    const monthKey = monthStart.toISOString().slice(0, 7); // YYYY-MM
    
    // –ü–æ —á–∞—Å–∞–º
    byHour[hour] = (byHour[hour] || 0) + 1;
    
    // –ü–æ –¥–Ω—è–º
    if (!byDay[day]) {
      byDay[day] = { orders: 0, revenue: 0, date: day };
    }
    byDay[day].orders += 1;
    byDay[day].revenue += order.totalPrice;
    
    // –ü–æ –Ω–µ–¥–µ–ª—è–º
    if (!byWeek[weekKey]) {
      byWeek[weekKey] = { orders: 0, revenue: 0, weekStart: weekKey };
    }
    byWeek[weekKey].orders += 1;
    byWeek[weekKey].revenue += order.totalPrice;
    
    // –ü–æ –º–µ—Å—è—Ü–∞–º
    if (!byMonth[monthKey]) {
      byMonth[monthKey] = { orders: 0, revenue: 0, monthStart: monthKey };
    }
    byMonth[monthKey].orders += 1;
    byMonth[monthKey].revenue += order.totalPrice;
    
    totalRevenue += order.totalPrice;
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    if (order.items && Array.isArray(order.items)) {
      for (const item of order.items) {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö
        const productName = item.productName || item.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä';
        const quantity = item.quantity || item.qty || 1;
        const price = item.price || 0;
        
        if (!byProduct[productName]) {
          byProduct[productName] = {
            productName,
            quantity: 0,
            totalRevenue: 0
          };
        }
        byProduct[productName].quantity += quantity;
        byProduct[productName].totalRevenue += price * quantity;
      }
    }
  }

  // –¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤
  const topProducts = Object.values(byProduct)
    .sort((a, b) => b.quantity - a.quantity)
    .slice(0, 10);

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º
  const dailyData = Object.values(byDay).sort((a, b) => a.date.localeCompare(b.date));
  const weeklyData = Object.values(byWeek).sort((a, b) => a.weekStart.localeCompare(b.weekStart));
  const monthlyData = Object.values(byMonth).sort((a, b) => a.monthStart.localeCompare(b.monthStart));

  console.log('üìä Analytics: —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤:', topProducts.length);
  console.log('üìä Analytics: –æ–±—â–∏–π –¥–æ—Ö–æ–¥:', totalRevenue);
  console.log('üìä Analytics: –¥–Ω–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏:', dailyData.length);
  console.log('üìä Analytics: –Ω–µ–¥–µ–ª—å —Å –¥–∞–Ω–Ω—ã–º–∏:', weeklyData.length);
  console.log('üìä Analytics: –º–µ—Å—è—Ü–µ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏:', monthlyData.length);

  return {
    revenue: totalRevenue,
    totalOrders,
    avgOrderValue: totalOrders > 0 ? totalRevenue / totalOrders : 0,
    topProducts,
    byHour,
    byDay: dailyData,
    byWeek: weeklyData,
    byMonth: monthlyData
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—á–∞–ª–∞ –Ω–µ–¥–µ–ª–∏ (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫)
function getWeekStart(date: Date): Date {
  const result = new Date(date);
  const day = result.getDay();
  const diff = result.getDate() - day + (day === 0 ? -6 : 1); // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
  result.setDate(diff);
  result.setHours(0, 0, 0, 0);
  return result;
}
